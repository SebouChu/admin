<%= simple_form_for item, url: item.persisted?  ? [:admin, item, { menu_id: @menu.id }]
                                                : admin_communication_website_menu_items_path(@menu) do |f| %>
  <%= f.error_notification %>
  <%= f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present? %>

  <%= f.input :parent_id, as: :hidden, wrapper: false %>
  <div class="card flex-fill w-100">
    <div class="card-header">
      <h5 class="card-title mb-0"><%= t('content') %></h5>
    </div>
    <div class="card-body">
      <div class="row">
        <div class="col-lg-6">
          <%= f.input :title %>
        </div>
        <div class="col-lg-6">
          <div data-kind-if="url">
            <%= f.input :url, as: :string %>
          </div>
          <div class="<%= 'd-none' unless item.has_about? %> js-about-fields">
            <%
              if item.has_about?
                if item.kind_page?
                  about_collection = collection_tree(@website.pages)
                elsif item.kind_program?
                  about_collection = collection_tree(@website.education_programs)
                elsif item.kind_news_category?
                  about_collection = collection_tree(@website.categories)
                elsif item.kind_news_article?
                  about_collection = @website.posts.ordered.map { |e| { label: e.to_s, id: e.id } }
                elsif item.kind_research_volume?
                  about_collection = @website.research_volumes.ordered.map { |e| { label: e.to_s, id: e.id } }
                elsif item.kind_research_article?
                  about_collection = @website.research_articles.ordered.map { |e| { label: e.to_s, id: e.id } }
                end
              else
                about_collection = []
              end
            %>
            <%= f.association :about,
                              collection: about_collection,
                              label_method: ->(p) { sanitize p[:label] },
                              value_method: ->(p) { p[:id] },
                              input_html: { class: 'js-about-id' } %>
            <%= f.input :about_type, as: :hidden, input_html: { class: 'js-about-type' } %>
          </div>
        </div>
      </div>
      <%= f.input :kind,
                  as: :hidden,
                  input_html: {
                    data: {
                      url: kind_switch_admin_communication_website_menu_items_path
                    }
                  } %>
      <div>
        <label class="form-label required">
          <%= Communication::Website::Menu::Item.human_attribute_name('kind') %>
          <abbr title="required">*</abbr>
        </label>
        <div class="row">
          <% @website.menu_item_kinds.keys.each do |kind| %>
            <div class="col-6 col-lg-4 col-xl-3 col-xxl-2">
              <div class="card kind" data-kind="<%= kind %>">
                <div class="card-body">
                  <p class="text-end mb-0">
                    <i class="<%= icon_for "communication.website.menu.item.kind.#{kind}" %> fa-2x"></i><br>
                  </p>
                  <p class="mb-0">
                    <%= t "enums.communication.website.menu.item.kind.#{kind}" %>
                  </p>
                  <a class="stretched-link"></a>
                </div>
              </div>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
  <% content_for :action_bar_right do %>
    <%= submit f %>
  <% end %>
<% end %>
